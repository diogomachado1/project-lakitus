version: '3'
services:
  mongodb:
      image : mongo
      volumes:
          - /home/database:/data/db 
      ports:
          - 27017:27017
      restart: unless-stopped
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        
  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:19092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
  
  games-crawler:
    build: ../games-crawler
    restart: always
    volumes:
      - ../games-crawler/src:/home/app/src:cached
      - ../games-crawler/test:/home/app/test:cached
      - ../games-crawler/package.json:/home/app/package.json:cached
    environment:
      MONGO_URL: mongodb://mongodb/games
      KAFKA_HOST: kafka:9092
  game-service:
    build: ../game-service
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ../game-service/src:/home/app/src:cached
      - ../game-service/test:/home/app/test:cached
      - ../game-service/package.json:/home/app/package.json:cached
    environment:
      MONGO_URL: mongodb://mongodb/games
      KAFKA_HOST: kafka:9092
  # kafka-connect:
  #   image: confluentinc/cp-kafka-connect-base:6.0.0
  #   container_name: kafka-connect
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   ports:
  #     - 8083:8083
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
  #     CONNECT_REST_PORT: 8083
  #     CONNECT_GROUP_ID: kafka-connect
  #     CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
  #     CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
  #     CONNECT_STATUS_STORAGE_TOPIC: _connect-status
  #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  #     CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
  #     CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
  #     CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
  #     CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
  #     # # Optional settings to include to support Confluent Control Center
  #     #   CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
  #     #   CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
  #     #  ---------------
  #     CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
  #   # If you want to use the Confluent Hub installer to d/l component, but make them available
  #   # when running this offline, spin up the stack once and then run :
  #   #   docker cp kafka-connect:/usr/share/confluent-hub-components ./data/connect-jars
  #   volumes:
  #     - $PWD/data:/data
  #   # In the command section, $ are replaced with $$ to avoid the error 'Invalid interpolation format for "command" option'
  #   command:
  #     - bash
  #     - -c
  #     - |
  #       echo "Installing Connector"
  #       confluent-hub install --no-prompt debezium/debezium-connector-mysql:1.2.2
  #       confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:10.0.1
  #       confluent-hub install --no-prompt jcustenborder/kafka-connect-twitter:0.3.33
  #       confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.5.0
  #       #
  #       echo "Launching Kafka Connect worker"
  #       /etc/confluent/docker/run &
  #       #
  #       sleep infinity